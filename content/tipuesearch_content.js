var tipuesearch = {"pages": [{'title': '關於', 'text': '內容管理系統以 https://github.com/mdecourse/cmsimde \xa0作為子模塊 此\xa0 通道，可以指定對應的版本，cmsimde可以持續改版，不會影響內容子模塊，使用舊版cmsimde模塊的管理相關道。 \n 利用cmsimde建立動態網誌方法： \n 1.在github建立網上，git clone到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms ，加入除了 cmsimde 目錄外的所有內容 \n 以 git 子模塊添加\xa0 https://github.com/mdecourse/cmsimde  \xa0cmsimde \n 建立cmsimde目錄，並從github取下子模組內容。 \n 3.在近端維護時，從目錄到遠程中的cmsimde，以python wsgi.py啟動近端網際服務器。 \n 動態內容編輯完成後，以generate_pages轉為內容內容，以git add commit及push將內容推到盡頭。 \n 4.之後若要以git clone取下包含子模塊的所有內容，執行： \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': '關於.html'}, {'title': '發展', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發可以在一個目錄中動態cmsimde，然後將up_dir中的內容與cmsimde目錄同位階的進入地方，使用命令cmsimde目錄，執行python wsgi.py , 可以啟動，瀏覽器 https://localhost:943 就可以連接，以admin 就可以管理管理員密碼，就可以登入維護內容。 \n cmsimde 的開發採用 Leo 編輯器，開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行修改，結束後，保留程序網絡內容，將 cmsimde 外部的內容倒回 up_dir 目錄中分類對 cmsimde 遠端進行改版。 \n init.py 位置 up_dir 目錄，可以設置 site_title 和 uwsgi 等變數。 \n', 'tags': '', 'url': '發展.html'}, {'title': '嘗試1', 'text': '< html > <頭> < title >最終項目 <元 字符集=“ utf-8 ” > <元 屬性=“頭”內容=“ H3 ” > <元 名稱=視口”內容=“寬度=設備寬度，初始比例=1，縮小到適合=無” > < link href =" https://fonts.googleapis.com/css?family=Quicksand:300,400,500,700,900 " rel ="樣式表" > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/fonts/icomoon/style.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/bootstrap.min.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/magnific-popup.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/jquery-ui.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/owl.carousel.min.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/owl.theme.default.min.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/bootstrap-datepicker.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/fonts/flaticon/font/flaticon.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/aos.css " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/chimper/css/style.css " > < link rel ="快捷方式圖標" href =" ./../cmsimde/static/favicons.png " > <樣式 類型=\'文本/css \' > . 網站部分{ 背景色： ＃ FFFF ; 填充： 40像素 40像素； } 身體 > div > div。下拉菜單。打開{ 顯示：塊； } \n  <script src="./../cmsimde/static/jquery.js"></script>  \n \n  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>  \n < script src =" ../cmsimde / static / chimper / js / jquery-3.3.1.min.js " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/tipuesearch/css/normalize.min.css " > < script src =" ./../cmsimde / static / tipuesearch / tipuesearch_set.js " > < script src =" tipuesearch_content.js " > <鏈接 rel ="樣式表" href =" ./../cmsimde/static/tipuesearch/css/tipuesearch.css " > < script src =" ./../cmsimde / static / tipuesearch / tipuesearch.js " > \n  用於 Wink3  \n < link rel ="樣式表" type =" text/css " href =" ./../cmsimde / static / winkPlayer.css " /> < script type =" text/javascript " src =" ./../cmsimde / static / winkPlayer.js " > <腳本> /* 原始提示搜索 $(document).ready(function() { $(\'#tipue_search_input\').tipuesearch(); }); */ // 自定義 doSearch 功能 doSearch ( ) { $ ( \'#tipue_search_input\' ) 。提示搜索（{ 新窗口：真， 最小長度：2 ， WholeWords : false , // 用於搜索 中文 } ) ; } $ （文件）。準備好（doSearch ）； < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shCore.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushBash.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushDiff.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushJScript.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushJava.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushPython.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushSql.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushHaxe.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushXml.js " > <腳本 類型="文本/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushPhp.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushPowerShell.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushLua.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushCpp.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushCss.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushCSharp.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushDart.js " > < script type =" text/javascript " src =" ./../cmsimde / static / syntaxhighlighter / shBrushRust.js " > <鏈接 類型="文本/css " rel ="樣式表" href =" ./../cmsimde / static / syntaxhighlighter /css / shCoreDefault.css "/> < script type =" text/javascript " >語法高亮。所有( ) ; \n 暫時不用\n<script src="./../cmsimde/static/fengari-web.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/Cango-13v08-min.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/CangoAxes-4v01-min.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/gearUtils-05.js"></script>\n \n \n  for Brython 暫時不用\n<script src="https://scrum-3.github.io/web/brython/brython.js"></script>\n<script src="https://scrum-3.github.io/web/brython/brython_stdlib.js"></script>\n \n <風格> 圖像。添加邊界{ 邊框： 3像素純藍色； } <身體> < div 類=\'容器流體\' > <導航> < div class =" site-wrap " > < div class =" site-mobile-menu " > < div class =" site-mobile-menu-header " > < div class =" site-mobile-menu-close mt-3 " > < span class =" icon-close2 js-menu-toggle " > < div class =" site-mobile-menu-body " > < header class =" site-navbar py-4 bg-white " role =" banner " > < div class =" container-fluid " > < div class =" row align-items-center " > < h1 >計算機程序課程期末評分網站 < div 類=“ pl-4 ” > <形式> <輸入 類型="文本"佔位符="搜索"名稱=" q " id =" tipue_search_input "模式=" .{2,} "標題="至少需要2個字符" > \n  <div class="col-11 col-xl-2">\n                    <h1 class="mb-0 site-logo"><a href="index.html" class="text-black h2 mb-0">計算機程序課程期末評分網站</a></h1> \n                  </div>\n                   \n < div class =" col-12 col-md-10 d-none d-xl-block " > < nav class =" site-navigation position-relative text-right " role =" navigation " > < ul class =\'站點菜單js-clone-nav mr-auto d-none d-lg-block \' > <鋰 類=“活性具有子女” > <一個 HREF =“ index.html的” >主頁 < ul class ="下拉列表" > <鋰> <一個 HREF =“ sitemap.html ” >網站地圖 <鋰> <一個 HREF =“ ./../reveal/index.html ” >靈獸 <鋰> <一個 HREF =“ ./../blog/index.html ” >博客 <鋰> <一個 HREF =\' About.html \' >關於 <李> <一個 HREF =\'最終Project.html \' >最終項目 <李> <一個 HREF =\' Notice.html \' >通告 <李 類=\'具有子女“ >   1A < UL 類=\'下拉\' > <李> <一個 HREF =\' demo.html \' >演示 <李> <一個 HREF =\' 1ag1.html \' > 1ag1 < li > < a href =\' 1ag2.html \' > 1ag2 <李> <一個 HREF =\' 1ag3.html \' > 1AG3 <李> <一個 HREF =\' 1ag4.html \' > 1ag4 <李> <一個 HREF =\' 1ag5.html \' > 1ag5 < /一> <李> <一個 HREF =\' 1ag6.html \' > 1ag6 <李> <一個 HREF =\' 1ag7.html \' > 1ag7 <李> <一個 HREF =\' 1ag8.html \' > 1ag8 <李> <一個 HREF =\' 1ag9.html \' > 1ag9 < / a > < li class =\' has-children \'> <一個 HREF =\' 1b.html \' > 1B < UL 類=\'下拉\' > <李> <一個 HREF =\' 1bg1.html \' > 1bg1 <李> <一個 HREF =\' 1bg2.html \' > 1bg2 < li > < a href = \' 1bg3.html \'> 1bg3 <李> <一個 HREF =\' 1bg4.html \' > 1bg4 <李> <一個 HREF =\' 1bg5.html \' > 1bg5 <李> <一個 HREF =\' 1bg6.html \' > 1bg6 < li > < a href = \' 1bg7.html \' >1bg7 <李 類=\'具有子女“ > <一個 HREF =\' 1bg8.html \' > 1bg8 < UL 類=\'下拉\' > <李> <一個 HREF =\' 41023237.html \' > 41023237 < / a > < div class =" d-inline-block d-xl-none ml-md-0 mr-auto py-3 " style =" position: relative; top: 3px; " > < a href =" # " class ="位點的菜單肘節JS-菜單肘節文本黑色“ > <跨度 類=”圖標菜單H3 “ > < DIV ID =“ tipue_search_content ” > 1bg8 < < <一個 HREF =\' 1bg8.html \' >上一頁 < BR /> < H1 > 41023237   導入brython程序庫   < script src =" / get_page / cmsimde / static / brython.js " > < script src =" / get_page / cmsimde / static / brython_stdlib.js " >   啟動Brython   <腳本> 窗口。加載=函數( ) { brython ( { debug : 1 , pythonpath : [ \'./../cmsimde/static/\' , \'./../downloads/py/\' ] } ) ; } < p >   導入 FileSaver 與 filereader   < p > < script src ="/ get_page / cmsimde / static / ace / FileSaver.min.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / filereader.js " type =" text/javascript " > < p >   導入高手   < p > < script src ="/ get_page / cmsimde / static / ace / ace.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / ext-language_tools.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / mode-python3.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / snippets / python.js " type =" text/javascript " > < p >  請注意，這裡使用Javascript 將localStorage["py_src"] 中存在近端瀏覽器的程序碼，由用戶決定存檔名稱  < p > <腳本 類型="文本/javascript " > 函數 doSave ( storage_id , 文件名) { var blob = new Blob ( [ localStorage [ storage_id ] ] , { type : "text/plain;charset=utf-8" } ) ; 文件名 = 文檔。getElementById （文件名）。價值 saveAs ( blob , 文件名+ ".py" ) ; } < p >   印出版次與關鍵字程序   < p > <腳本 類型="文本/python3 " > 從 瀏覽器 導入 文檔 作為 文檔 進口 王牌 #清除畫布 def clear_bd ( ev ) : bd = doc [ “brython_div” ] BD . 清除( ) # Brython 3.3 .4 內建的 容器 名稱為 \'container\' 且 turtle 輸出為 svg 必須使用 div 訂單定 id 王牌 = 王牌。編輯器（editor_id = "kw_editor" , console_id = "kw_console" , container_id = "kw__container" , storage_id = "kw_py_src" ） #從 gist 取出視頻後， 在線 編輯器或 作為 默認 程序 定義 運行（）： #利用 get 取下 src 變數值 嘗試： 網址 = 文檔。查詢[ "src" ] 除了： url = "https://gist.githubusercontent.com/www000123/8a35a79a245052e07cd3522533f12dbe/raw/193d0bf5a829f0de25cc0dfff15dc27b07ec2f83/%25A79a245052e07cd3522533f12dbe/raw/193d0bf5a829f0de25cc0dfff15dc27b07ec2f83/%5B52%5%2585%2E85%2E%585825858582 編 = 打開（網址）。讀( ) #將程序載入編輯區 艾斯。編輯器。設置值（編） 艾斯。編輯器。滾動到行( 0 ) 艾斯。編輯器。轉到行( 0 ) #直接執行程序 # ns = { \'__name__\' : \'__main__\' } # exec ( prog , ns ) #按下 運行 按鈕 艾斯。跑( ) #執行程序， 顯示輸出結果與清除輸出結果及對應按鈕綁定 文檔[ \'kw_run\' ] 。綁定（\'點擊\' ， 王牌。運行） 文檔[ \'kw_show_console\' ] 。綁定（“點擊” ， 王牌。show_console ） 文檔[ \'kw_clear_console\' ] 。綁定（“點擊” ， 王牌。clear_console ） 文檔[ \'clear_bd\' ] 。綁定（\'點擊\' ， clear_bd ） #呼叫函式執行 跑( ) < p >   顯示程序代碼的編輯器區域   < div id =" kw_editor " style =" width:600px;height:300px; " > < p >  下面的表單與按鈕與前面的Javascript doSave 函數式以及FileSaver.min.js 互相配合     存擋表單開始   < form > < label > Filename: < input id =" kw_filename " placeholder =" input file name " type =" text "/>.py < input onclick = " doSave(\'kw_py_src\', \'kw_filename\'); " type =" submit " value =" Save "/>   存擋表單結束   < p >   執行與清除按鈕開始  < p > < button id =" kw_run " > Run < button id =" kw_show_console " >輸出 < button id =" kw_clear_console " >清除輸出區 < button id =" clear_bd " >清除繪圖區 <按鈕 點擊=window.location.reload() " >重新加載   執行與清除按鈕結束   < p >   程序執行輸出區   < div style =" width:100%;height:100%; " > < textarea autocomplete =" off " id =" kw_console " >   Brython 程序執行的結果，都以 brython_div 作為切入位置   < div id =" brython_div " >   導入 gearUtils-0.9.js Cango 繪圖程序庫   < script src =" https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/sylvester.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js " >   導入brython程序庫   < script src =" / get_page / cmsimde / static / brython.js " > < script src =" / get_page / cmsimde / static / brython_stdlib.js " >   啟動Brython   <腳本> 窗口。加載=函數( ) { brython ( { debug : 1 , pythonpath : [ \'./../cmsimde/static/\' , \'./../downloads/py/\' ] } ) ; } < p >   導入 FileSaver 與 filereader   < p > < script src ="/ get_page / cmsimde / static / ace / FileSaver.min.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / filereader.js " type =" text/javascript " > < p >   導入高手   < p > < script src ="/ get_page / cmsimde / static / ace / ace.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / ext-language_tools.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / mode-python3.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / snippets / python.js " type =" text/javascript " > < p >  請注意，這裡使用Javascript 將localStorage["py_src"] 中存在近端瀏覽器的程序碼，由用戶決定存檔名稱  < p > <腳本 類型="文本/javascript " > 函數 doSave ( storage_id , 文件名) { var blob = new Blob ( [ localStorage [ storage_id ] ] , { type : "text/plain;charset=utf-8" } ) ; 文件名 = 文檔。getElementById （文件名）。價值 saveAs ( blob , 文件名+ ".py" ) ; } < p >   印出版次與關鍵字程序   < p > <腳本 類型="文本/python3 " > 從 瀏覽器 導入 文檔 作為 文檔 進口 王牌 #清除畫布 def clear_bd ( ev ) : bd = doc [ “brython_div” ] BD . 清除( ) # Brython 3.3 .4 內建的 容器 名稱為 \'container\' 且 turtle 輸出為 svg 必須使用 div 訂單定 id 王牌 = 王牌。編輯器（editor_id = "kw_editor" , console_id = "kw_console" , container_id = "kw__container" , storage_id = "kw_py_src" ） #從 gist 取出視頻後， 在線 編輯器或 作為 默認 程序 定義 運行（）： #利用 get 取下 src 變數值 嘗試： 網址 = 文檔。查詢[ "src" ] 除了： url = "https://gist.githubusercontent.com/www000123/b8152a10732b2c15a4bb4fd35cce1124/raw/4eb72275095af1ec335a94d467905e092d1de0c2/w13" 編 = 打開（網址）。讀( ) #將程序載入編輯區 艾斯。編輯器。設置值（編） 艾斯。編輯器。滾動到行( 0 ) 艾斯。編輯器。轉到行( 0 ) #直接執行程序 # ns = { \'__name__\' : \'__main__\' } # exec ( prog , ns ) #按下 運行 按鈕 艾斯。跑( ) #執行程序， 顯示輸出結果與清除輸出結果及對應按鈕綁定 文檔[ \'kw_run\' ] 。綁定（\'點擊\' ， 王牌。運行） 文檔[ \'kw_show_console\' ] 。綁定（“點擊” ， 王牌。show_console ） 文檔[ \'kw_clear_console\' ] 。綁定（“點擊” ， 王牌。clear_console ） 文檔[ \'clear_bd\' ] 。綁定（\'點擊\' ， clear_bd ） #呼叫函式執行 跑( ) < p >   顯示程序代碼的編輯器區域   < div id =" kw_editor " style =" width:600px;height:300px; " > < p >  下面的表單與按鈕與前面的Javascript doSave 函數式以及FileSaver.min.js 互相配合     存擋表單開始   < form > < label > Filename: < input id =" kw_filename " placeholder =" input file name " type =" text "/>.py < input onclick = " doSave(\'kw_py_src\', \'kw_filename\'); " type =" submit " value =" Save "/>   存擋表單結束   < p >   執行與清除按鈕開始  < p > < button id =" kw_run " > Run < button id =" kw_show_console " >輸出 < button id =" kw_clear_console " >清除輸出區 < button id =" clear_bd " >清除繪圖區 <按鈕 點擊=window.location.reload() " >重新加載   執行與清除按鈕結束   < p >   程序執行輸出區   < div style =" width:100%;height:100%; " > < textarea autocomplete =" off " id =" kw_console " >   Brython 程序執行的結果，都以 brython_div 作為切入位置   < div id =" brython_div " >   導入 gearUtils-0.9.js Cango 繪圖程序庫   < script src =" https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/sylvester.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js " >   導入brython程序庫   < script src =" / get_page / cmsimde / static / brython.js " > < script src =" / get_page / cmsimde / static / brython_stdlib.js " >   啟動Brython   <腳本> 窗口。加載=函數( ) { brython ( { debug : 1 , pythonpath : [ \'./../cmsimde/static/\' , \'./../downloads/py/\' ] } ) ; } < p >   導入 FileSaver 與 filereader   < p > < script src ="/ get_page / cmsimde / static / ace / FileSaver.min.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / filereader.js " type =" text/javascript " > < p >   導入高手   < p > < script src ="/ get_page / cmsimde / static / ace / ace.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / ext-language_tools.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / mode-python3.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / snippets / python.js " type =" text/javascript " > < p >  請注意，這裡使用Javascript 將localStorage["py_src"] 中存在近端瀏覽器的程序碼，由用戶決定存檔名稱  < p > <腳本 類型="文本/javascript " > 函數 doSave ( storage_id , 文件名) { var blob = new Blob ( [ localStorage [ storage_id ] ] , { type : "text/plain;charset=utf-8" } ) ; 文件名 = 文檔。getElementById （文件名）。價值 saveAs ( blob , 文件名+ ".py" ) ; } < p >   印出版次與關鍵字程序   < p > <腳本 類型="文本/python3 " > 從 瀏覽器 導入 文檔 作為 文檔 進口 王牌 #清除畫布 def clear_bd ( ev ) : bd = doc [ “brython_div” ] BD . 清除( ) # Brython 3.3 .4 內建的 容器 名稱為 \'container\' 且 turtle 輸出為 svg 必須使用 div 訂單定 id 王牌 = 王牌。編輯器（editor_id = "kw_editor" , console_id = "kw_console" , container_id = "kw__container" , storage_id = "kw_py_src" ） #從 gist 取出視頻後， 在線 編輯器或 作為 默認 程序 定義 運行（）： #利用 get 取下 src 變數值 嘗試： 網址 = 文檔。查詢[ "src" ] 除了： 網址 = "https://gist.githubusercontent.com/www000123/d4ed6aa8ad37cca1dbeebdfba88d16fd/raw/d84f57772590d683a53a1628ee4a3bb55bbba45c/%25E725295%E%24%52525%E%25 編 = 打開（網址）。讀( ) #將程序載入編輯區 艾斯。編輯器。設置值（編） 艾斯。編輯器。滾動到行( 0 ) 艾斯。編輯器。轉到行( 0 ) #直接執行程序 # ns = { \'__name__\' : \'__main__\' } # exec ( prog , ns ) #按下 運行 按鈕 艾斯。跑( ) #執行程序， 顯示輸出結果與清除輸出結果及對應按鈕綁定 文檔[ \'kw_run\' ] 。綁定（\'點擊\' ， 王牌。運行） 文檔[ \'kw_show_console\' ] 。綁定（“點擊” ， 王牌。show_console ） 文檔[ \'kw_clear_console\' ] 。綁定（“點擊” ， 王牌。clear_console ） 文檔[ \'clear_bd\' ] 。綁定（\'點擊\' ， clear_bd ） #呼叫函式執行 跑( ) < p >   顯示程序代碼的編輯器區域   < div id =" kw_editor " style =" width:600px;height:300px; " > < p >  下面的表單與按鈕與前面的Javascript doSave 函數式以及FileSaver.min.js 互相配合     存擋表單開始   < form > < label > Filename: < input id =" kw_filename " placeholder =" input file name " type =" text "/>.py < input onclick = " doSave(\'kw_py_src\', \'kw_filename\'); " type =" submit " value =" Save "/>   存擋表單結束   < p >   執行與清除按鈕開始  < p > < button id =" kw_run " > Run < button id =" kw_show_console " >輸出 < button id =" kw_clear_console " >清除輸出區 < button id =" clear_bd " >清除繪圖區 <按鈕 點擊=window.location.reload() " >重新加載   執行與清除按鈕結束   < p >   程序執行輸出區   < div style =" width:100%;height:100%; " > < textarea autocomplete =" off " id =" kw_console " >   Brython 程序執行的結果，都以 brython_div 作為切入位置   < div id =" brython_div " >   導入 gearUtils-0.9.js Cango 繪圖程序庫   < script src =" https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/sylvester.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js " >   導入brython程序庫   < script src =" / get_page / cmsimde / static / brython.js " > < script src =" / get_page / cmsimde / static / brython_stdlib.js " >   啟動Brython   <腳本> 窗口。加載=函數( ) { brython ( { debug : 1 , pythonpath : [ \'./../cmsimde/static/\' , \'./../downloads/py/\' ] } ) ; } < p >   導入 FileSaver 與 filereader   < p > < script src ="/ get_page / cmsimde / static / ace / FileSaver.min.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / filereader.js " type =" text/javascript " > < p >   導入高手   < p > < script src ="/ get_page / cmsimde / static / ace / ace.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / ext-language_tools.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / mode-python3.js " type =" text/javascript " > < script src ="/ get_page / cmsimde / static / ace / snippets / python.js " type =" text/javascript " > < p >  請注意，這裡使用Javascript 將localStorage["py_src"] 中存在近端瀏覽器的程序碼，由用戶決定存檔名稱  < p > <腳本 類型="文本/javascript " > 函數 doSave ( storage_id , 文件名) { var blob = new Blob ( [ localStorage [ storage_id ] ] , { type : "text/plain;charset=utf-8" } ) ; 文件名 = 文檔。getElementById （文件名）。價值 saveAs ( blob , 文件名+ ".py" ) ; } < p >   印出版次與關鍵字程序   < p > <腳本 類型="文本/python3 " > 從 瀏覽器 導入 文檔 作為 文檔 進口 王牌 #清除畫布 def clear_bd ( ev ) : bd = doc [ “brython_div” ] BD . 清除( ) # Brython 3.3 .4 內建的 容器 名稱為 \'container\' 且 turtle 輸出為 svg 必須使用 div 訂單定 id 王牌 = 王牌。編輯器（editor_id = "kw_editor" , console_id = "kw_console" , container_id = "kw__container" , storage_id = "kw_py_src" ） #從 gist 取出視頻後， 在線 編輯器或 作為 默認 程序 定義 運行（）： #利用 get 取下 src 變數值 嘗試： 網址 = 文檔。查詢[ "src" ] 除了： url = "https://gist.githubusercontent.com/www000123/b7092d110f2e0e6dc59bc0ad31608f8c/raw/045fc9e31a54565a925f24f5445f7edb02fca94d/afaf prog = 打開（網址）。讀（） #將程序載入編輯區 Ace.editor.setValue(prog) Ace.editor.scrollToRow(0) Ace.editor.gotoLine(0) #直接執行程序 #ns = {\'__name__\':\'__main__\'} #exec(prog, ns) # 按下運行按鈕 Ace.run() # 執行程序，顯示輸出結果與清除輸出結果及對應綁定 doc[\'kw_run\'].bind(\'click\', Ace.run) doc[\'kw_show_console\'].bind(\'click\', Ace.show_console) doc[\'kw_clear_console\'].bind(\'click\', Ace.clear_console) doc[\'clear_bd\'].bind(\'click\', clear_bd) #呼叫函式執行 跑（） < p >   顯示程序代碼的編輯器區域   < div id =" kw_editor " style =" width:600px;height:300px; " > < p >  下面的表單與按鈕與前面的Javascript doSave 函數式以及FileSaver.min.js 互相配合     存擋表單開始   < form > < label > Filename: < input id =" kw_filename " placeholder =" input file name " type =" text "/>.py < input onclick = " doSave(\'kw_py_src\', \'kw_filename\'); " type =" submit " value =" Save "/>   存擋表單結束   < p >   執行與清除按鈕開始  < p > < button id =" kw_run " > Run < button id =" kw_show_console " >輸出 < button id =" kw_clear_console " >清除輸出區 < button id =" clear_bd " >清除繪圖區 <按鈕 點擊=window.location.reload() " >重新加載   執行與清除按鈕結束   < p >   程序執行輸出區   < div style =" width:100%;height:100%; " > < textarea autocomplete =" off " id =" kw_console " >   Brython 程序執行的結果，都以 brython_div 作為切入位置   < div id =" brython_div " >   導入 gearUtils-0.9.js Cango 繪圖程序庫   < script src =" https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js " > < script src =" https://mde.tw/cp2021/cmsimde/static/sylvester.js " > <腳本 SRC =“ https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js ” > < BR /> 1bg8 < < <一個 HREF =\' 1bg8.html \' >上一頁   頁腳   < div 類="容器" > < div class =" row pt-3 mx-auto " > < p >   無法刪除回 Colorlib 的鏈接。模板在 CC BY 3.0 下獲得許可。  版權所有 <腳本>文檔。寫（新的 日期（）。和getFullYear （））; 版權所有 | 這個模板是用< i class =" icon-heart " aria-hidden =" true " > by < a href =" https://colorlib.com " target =" _blank "製作的Colorlib   無法刪除回 Colorlib 的鏈接。模板在 CC BY 3.0 下獲得許可。    用於頁腳     用於網站換行     <script src="../cmsimde/static/chimper/js/jquery-3.3.1.min.js"></script>   < script src =" ../cmsimde / static / chimper / js / jquery-migrate-3.0.1.min.js " > < script src =" ../cmsimde / static / chimper / js / jquery-ui.js " > < script src =" ../cmsimde / static / chimper / js / popper.min.js " > < script src =" ../cmsimde / static / chimper / js / bootstrap.min.js " > < script src =" ../cmsimde / static / chimper / js / owl.carousel.min.js " > < script src =" ../cmsimde / static / chimper / js / jquery.stellar.min.js " > < script src =" ../cmsimde / static / chimper / js / jquery.countdown.min.js " > < script src =" ../cmsimde / static / chimper / js / jquery.magnific-popup.min.js " > < script src =" ../cmsimde / static / chimper / js / bootstrap-datepicker.min.js " > < script src =" ../cmsimde / static / chimper / js / aos.js " >  \n            <script src="../cmsimde/static/chimper/js/typed.js"></script>\n                    <腳本>\n                    var typed = new Typed(\'.typed-words\', {\n                    字符串：[“Web 應用程序”、“WordPress”、“移動應用程序”]、\n                    類型速度：80，\n                    後退速度：80，\n                    返回延遲：4000，\n                    開始延遲：1000，\n                    循環：真的，\n                    顯示光標：true\n                    });\n                    </腳本>\n              < script src =" ../cmsimde / static / chimper / js / main.js " >   允許 LaTeX 方程編輯     <腳本>\n  MathJax = {\n    tex: {inlineMath: [[\'$\', \'$\'], [\'\\(\', \'\\)\']]}\n  };\n  </腳本>\n  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>  ', 'tags': '', 'url': '嘗試1.html'}]};