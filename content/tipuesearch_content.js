var tipuesearch = {"pages": [{'title': '關於', 'text': '內容管理系統以 https://github.com/mdecourse/cmsimde \xa0作為子模塊 此\xa0 接口，可以指定對應版本，cmsimde可以持續改版，不會影響內容子模塊，使用舊版cmsimde模塊的管理相關道。 \n 利用cmsimde建立動態網誌方法： \n 1.在github建立網上，git clone到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms ，加入除了 cmsimde 目錄外的所有內容 \n 以git子模塊添加\xa0 https://github.com/mdecourse/cmsimde  \xa0cmsimde \n 建立cmsimde目錄，並從github取下子模組內容。 \n 3.在近端維護時，從目錄到遠程中的cmsimde，以python wsgi.py啟動近端網際服務器。 \n 動態內容編輯完成後，以generate_pages轉為內容內容，以git add commit及push將內容推到盡頭。 \n 4.之後若要以git clone取下包含子模塊的所有內容，執行： \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': '關於.html'}, {'title': '發展', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發可以在一個目錄中動態cmsimde，然後將up_dir中的內容與cmsimde目錄同位階的進入地方，使用命令cmsimde目錄，執行python wsgi.py，可以啟動，瀏覽器 https://localhost:943 就可以連接，以管理員身份就可以管理管理員密碼，就可以登入維護內容。 \n cmsimde 的開發採用 Leo 編輯器，開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行修改，結束後，保留網絡內容，將 cmsimde 外部的內容倒回 up_dir 目錄中分類對 cmsimde 遠端程序進行改版。 \n init.py 位置 up_dir 目錄，可以設置 site_title 和 uwsgi 等變數。 \n', 'tags': '', 'url': '發展.html'}, {'title': '41023237', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  文件名：  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑   輸出   清除輸出區 清除繪圖區 重新加載 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  文件名：  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑   輸出   清除輸出區 清除繪圖區 重新加載 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  文件名：  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑   輸出   清除輸出區 清除繪圖區 重新加載 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  文件名：  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑   輸出   清除輸出區 清除繪圖區 重新加載 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n', 'tags': '', 'url': '41023237.html'}]};